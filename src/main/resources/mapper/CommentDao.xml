<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chan.dao.CommentDao">

    <resultMap id="CommentsMap" type="com.chan.dto.ParentComments">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="baseCommentId" column="base_comment_id"/>
    </resultMap>
    <select id="getParentComments" resultType="com.chan.dto.ParentComments">
        select * from t_comment
        where blog_id = #{id} and base_comment_id = -1 and parent_comment_id = 0
        order by create_time asc
    </select>



    <select id="getCommentsByDidId"  resultMap="SunCommentsMap">
        select * from t_comment c
        where c.parent_comment_id = #{parentId} and blog_id = #{blogId} and base_comment_id = -1
        order by create_time asc
    </select>

    <resultMap id="SunCommentsMap" type="com.chan.pojo.Comment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="baseCommentId" column="base_comment_id"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
    </resultMap>

    <insert id="addComment" parameterType="com.chan.pojo.Comment">
        insert into t_comment ( nickname, email, content, create_time, blog_id, parent_comment_id,parent_comment_nickname,base_comment_id)
        VALUES (#{nickname},#{email},#{content},#{createTime},#{blogId},#{parentCommentId},#{parentCommentNickname},#{baseCommentId})
    </insert>


    <resultMap id="messageMap" type="com.chan.dto.ParentComments">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="baseCommentId" column="base_comment_id"/>
    </resultMap>
    <select id="getParentMessages" resultMap="messageMap">
        select * from t_comment
        where base_comment_id = 0 and parent_comment_id = 0
        order by create_time asc
    </select>

    <resultMap id="SunMessageMap" type="com.chan.pojo.Comment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="blogId" column="blog_id"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="baseCommentId" column="base_comment_id"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
    </resultMap>
    <select id="getMessagesByDidId" resultMap="SunMessageMap">
        select * from t_comment
        where parent_comment_id = #{parentId} and base_comment_id = 0
        order by create_time asc
    </select>

    <select id="commentTotal" resultType="int">
        SELECT COUNT(*) FROM t_comment where base_comment_id = -1
    </select>

    <select id="messageTotal" resultType="int">
        SELECT COUNT(*) FROM t_comment where base_comment_id = 0
    </select>
</mapper>